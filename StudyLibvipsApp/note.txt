LAB 颜色空间:
     https://blog.csdn.net/lz0499/article/details/77345166

sRGB & RGB:
     https://www.zhihu.com/question/20602284

LCH & LAB:
      http://www.estonetech.com.cn/threestyle/estonetech/companynews/834201.html

深入理解颜色空间：
    https://www.jianshu.com/p/f03e9ac9c9ef


===================== access region of image ==============
VipsImage *image = vips_image_new_from_file( filename, NULL );
VipsRegion *region = vips_region_new( image );

// ask for a 100x100 pixel region at 0x0 (top left)
VipsRect r = { left: 0, top: 0, width: 100, height: 100 };
if( vips_region_prepare( region, &r ) )
  vips_error( ... );

// get a pointer to the pixel at x, y, where x, y must
// be within the region

// as long as you stay within the valid area for the region,
// you can address pixels with regular pointer arithmetic

// compile with -DDEBUG and the macro will check bounds for you

// add VIPS_REGION_LSKIP() to move down a line
VipsPel *pixel = VIPS_REGION_ADDR( region, x, y );

// you can call vips_region_prepare() many times

// everything in libvips is a GObject ... when you're done,
// just free with
g_object_unref( region );


//get all options
vips_object_get_args(...)
========================= opencv =============
绘制轮廓: https://www.cnblogs.com/wojianxin/p/12600958.html


======================== glib ==========================
 self = g_object_new(DLNA_TYPE_DMP, "client",context,"target",target,NULL);---
 /*创建一个dlnadmp对象，并将其属性client指针成员赋初值为context。client的定义在其父类即gssdpreourcebrowser的成员gssdpclient *client。

 g_object_new(...) 可以同时设置多个成员变量
 g_object_set(...) 可以同时设置多个成员变量


  g_return_val_if_fail(target != NULL, NULL);
  g_sign_emit（...） 发送信号
  g_sign_connect(...) 相当于设置回调

  ===========================================
  #define VIPS_ARG_INT( CLASS, NAME, PRIORITY, LONG, DESC, \
  	FLAGS, OFFSET, MIN, MAX, VALUE ) { \
  	GParamSpec *pspec; \
  	\
  	pspec = g_param_spec_int( (NAME), (LONG), (DESC), \
  		(MIN), (MAX), (VALUE), \
  		(GParamFlags) (G_PARAM_READWRITE) );\
  	g_object_class_install_property( G_OBJECT_CLASS( CLASS ), \
  		vips_argument_get_id(), pspec ); \
  	vips_object_class_install_argument( VIPS_OBJECT_CLASS( CLASS ), \
  		pspec, (VipsArgumentFlags) (FLAGS), (PRIORITY), (OFFSET) ); \
  }

  VIPS_ARG_INT( class, "x1", 3,
  		_( "x1" ),
  		_( "Start of draw_line" ),
  		VIPS_ARGUMENT_REQUIRED_INPUT,
  		G_STRUCT_OFFSET( VipsDrawLine, x1 ),
  		-1000000000, 1000000000, 0 );